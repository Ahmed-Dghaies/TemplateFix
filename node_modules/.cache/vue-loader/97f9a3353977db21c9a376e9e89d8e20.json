{"remainingRequest":"/Users/ahmeddghaies/Documents/GitHub/cynoia-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ahmeddghaies/Documents/GitHub/cynoia-front/src/views/Profile.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ahmeddghaies/Documents/GitHub/cynoia-front/src/views/Profile.vue","mtime":1596120715651},{"path":"/Users/ahmeddghaies/Documents/GitHub/cynoia-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ahmeddghaies/Documents/GitHub/cynoia-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ahmeddghaies/Documents/GitHub/cynoia-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ahmeddghaies/Documents/GitHub/cynoia-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiUHJvZmlsZSIsCiAgY29tcHV0ZWQ6IHsKICAgIGN1cnJlbnRVc2VyKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUuYXV0aC51c2VyOwogICAgfQogIH0sCiAgbW91bnRlZCgpIHsKICAgIGlmICghdGhpcy5jdXJyZW50VXNlcikgewogICAgICB0aGlzLiRyb3V0ZXIucHVzaCgiL2xvZ2luIik7CiAgICB9CiAgfSwKCiAgbWV0aG9kczogewogICAgaGFuZGxlTG9nb3V0KCkgewogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgiYXV0aC9sb2dvdXQiLCB0aGlzLnVzZXIpLnRoZW4oCiAgICAgICAgKCkgPT4gewogICAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goIi9sb2dpbiIpOwogICAgICAgIH0sCiAgICAgICAgZXJyb3IgPT4gewogICAgICAgICAgdGhpcy5tZXNzYWdlID0KICAgICAgICAgICAgKGVycm9yLnJlc3BvbnNlICYmIGVycm9yLnJlc3BvbnNlLmRhdGEpIHx8CiAgICAgICAgICAgIGVycm9yLm1lc3NhZ2UgfHwKICAgICAgICAgICAgZXJyb3IudG9TdHJpbmcoKTsKICAgICAgICB9CiAgICAgICk7CiAgICB9CiAgfQp9Owo="},{"version":3,"sources":["Profile.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Profile.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"container\">\n    <header class=\"jumbotron\">\n      <h3>\n        <strong>{{currentUser.firstName + \" \" + currentUser.lastName}}</strong> Profile\n      </h3>\n    </header>\n    <p>\n      <strong>Token:</strong>\n      {{currentUser.accessToken.substring(0, 20)}} ... {{currentUser.accessToken.substr(currentUser.accessToken.length - 20)}}\n    </p>\n    <p>\n      <strong>Id:</strong>\n      {{currentUser.id}}\n    </p>\n    <p>\n      <strong>Email:</strong>\n      {{currentUser.email}}\n    </p>\n    <strong>Authorities:</strong>\n    <ul>\n      <li v-for=\"(role,index) in currentUser.roles\" :key=\"index\">{{role}}</li>\n    </ul>\n    <div>\n      <button class=\"button\" @click=\"handleLogout\">\n        <span>Logout</span>\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"Profile\",\n  computed: {\n    currentUser() {\n      return this.$store.state.auth.user;\n    }\n  },\n  mounted() {\n    if (!this.currentUser) {\n      this.$router.push(\"/login\");\n    }\n  },\n\n  methods: {\n    handleLogout() {\n      this.$store.dispatch(\"auth/logout\", this.user).then(\n        () => {\n          this.$router.push(\"/login\");\n        },\n        error => {\n          this.message =\n            (error.response && error.response.data) ||\n            error.message ||\n            error.toString();\n        }\n      );\n    }\n  }\n};\n</script>"]}]}